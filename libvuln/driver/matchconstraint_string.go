// Code generated by "stringer -type MatchConstraint"; DO NOT EDIT.

package driver

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PackageSourceName-1]
	_ = x[PackageName-2]
	_ = x[PackageModule-3]
	_ = x[DistributionDID-4]
	_ = x[DistributionName-5]
	_ = x[DistributionVersion-6]
	_ = x[DistributionVersionCodeName-7]
	_ = x[DistributionVersionID-8]
	_ = x[DistributionArch-9]
	_ = x[DistributionCPE-10]
	_ = x[DistributionPrettyName-11]
	_ = x[RepositoryName-12]
}

const _MatchConstraint_name = "PackageSourceNamePackageNamePackageModuleDistributionDIDDistributionNameDistributionVersionDistributionVersionCodeNameDistributionVersionIDDistributionArchDistributionCPEDistributionPrettyNameRepositoryName"

var _MatchConstraint_index = [...]uint8{0, 17, 28, 41, 56, 72, 91, 118, 139, 155, 170, 192, 206}

func (i MatchConstraint) String() string {
	i -= 1
	if i < 0 || i >= MatchConstraint(len(_MatchConstraint_index)-1) {
		return "MatchConstraint(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MatchConstraint_name[_MatchConstraint_index[i]:_MatchConstraint_index[i+1]]
}
