// Code generated by "stringer -type=V2Metric,v2Valid -linecomment"; DO NOT EDIT.

package cvss

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[V2AccessVector-0]
	_ = x[V2AccessComplexity-1]
	_ = x[V2Authentication-2]
	_ = x[V2Confidentiality-3]
	_ = x[V2Integrity-4]
	_ = x[V2Availability-5]
	_ = x[V2Exploitability-6]
	_ = x[V2RemediationLevel-7]
	_ = x[V2ReportConfidence-8]
	_ = x[V2CollateralDamagePotential-9]
	_ = x[V2TargetDistribution-10]
	_ = x[V2ConfidentialityRequirement-11]
	_ = x[V2IntegrityRequirement-12]
	_ = x[V2AvailabilityRequirement-13]
}

const _V2Metric_name = "AVACAuCIAERLRCCDPTDCRIRAR"

var _V2Metric_index = [...]uint8{0, 2, 4, 6, 7, 8, 9, 10, 12, 14, 17, 19, 21, 23, 25}

func (i V2Metric) String() string {
	if i < 0 || i >= V2Metric(len(_V2Metric_index)-1) {
		return "V2Metric(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _V2Metric_name[_V2Metric_index[i]:_V2Metric_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[v2AccessVectorValid-0]
	_ = x[v2AccessComplexityValid-1]
	_ = x[v2AuthenticationValid-2]
	_ = x[v2ConfidentialityValid-3]
	_ = x[v2IntegrityValid-4]
	_ = x[v2AvailabilityValid-5]
	_ = x[v2ExploitabilityValid-6]
	_ = x[v2RemediationLevelValid-7]
	_ = x[v2ReportConfidenceValid-8]
	_ = x[v2CollateralDamagePotentialValid-9]
	_ = x[v2TargetDistributionValid-10]
	_ = x[v2ConfidentialityRequirementValid-11]
	_ = x[v2IntegrityRequirementValid-12]
	_ = x[v2AvailabilityRequirementValid-13]
}

const _v2Valid_name = "LANHMLMSNNPCNPCNPCUPOCFHNDOFTFWUNDUCURCNDNLLMMHHNDNLMHNDLMHNDLMHNDLMHND"

var _v2Valid_index = [...]uint8{0, 3, 6, 9, 12, 15, 18, 26, 34, 41, 50, 56, 61, 66, 71}

func (i v2Valid) String() string {
	if i < 0 || i >= v2Valid(len(_v2Valid_index)-1) {
		return "v2Valid(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _v2Valid_name[_v2Valid_index[i]:_v2Valid_index[i+1]]
}
