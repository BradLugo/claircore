// Code generated by ragel-go from parser.rl. DO NOT EDIT.

package main

import (
	"fmt"
	"github.com/quay/claircore/toolkit/types/cvss"
)

// Copied out of the cvss package. Accurate for 4.0.
const numV4Metrics = 32

// MustParseV4Frag is a helper for constructing score data in the cvss package.
//
// This is very close to the "v4" machine, but has no completeness requirements
// and allows some invalid values in the S[IA] metrics.
// See the BUG note in the cvss package for details.
func mustParseV4Frag(in string) []byte {
	var v [numV4Metrics]byte
	var m cvss.V4Metric
	var mi int
	data := []byte(in)
	cs, p, pe, eof := 0, 0, len(data), len(data)
	{
		cs = int(v4frag_start)

	}
	{
		var _trans uint = 0
		var _keys int
		var _inds int
		var _ic int
	_resume:
		{

		}
		if p == pe && p != eof {
			goto _out

		}
		if p == eof {
			if _v4frag_eof_trans[cs] > 0 {
				_trans = uint(_v4frag_eof_trans[cs]) - 1

			}

		} else {
			_keys = int((cs << 1))

			_inds = int(_v4frag_index_offsets[cs])

			if (data[p]) <= 114 && (data[p]) >= 47 {
				_ic = int(_v4frag_char_class[int((data[p]))-47])
				if _ic <= int(_v4frag_trans_keys[_keys+1]) && _ic >= int(_v4frag_trans_keys[_keys]) {
					_trans = uint(_v4frag_indices[_inds+int((_ic-int(_v4frag_trans_keys[_keys])))])

				} else {
					_trans = uint(_v4frag_index_defaults[cs])

				}

			} else {
				_trans = uint(_v4frag_index_defaults[cs])

			}

		}
		cs = int(_v4frag_cond_targs[_trans])
		if _v4frag_cond_actions[_trans] != 0 {
			switch _v4frag_cond_actions[_trans] {
			case 4:
				{
					v[m] = (data[p])
				}

			case 2:
				{
					mi = p
				}

			case 3:
				{
					m = v4Rev[string(data[mi:p])]
				}

			case 1:
				{
					if p == eof {
						panic(fmt.Errorf("cvss v4: %w: %q: too short", cvss.ErrMalformedVector, in))
					}
					panic(fmt.Errorf("cvss v4: %w: unexpected character #%d: %s\u2192%c\u2190%s",
						cvss.ErrMalformedVector,
						p+1, string(data[:p]), (data[p]), string(data[p+1:])))
				}

			}

		}
		if p == eof {
			if cs >= 61 {
				goto _out

			}

		} else {
			if cs != 0 {
				p += 1
				goto _resume

			}

		}
	_out:
		{

		}

	}
	if p != eof {
		panic(fmt.Errorf("cvss v4 fragment: %w: unexpected character #%d: %s\u2192%c\u2190%s",
			cvss.ErrMalformedVector,
			p+1, string(data[:p]), data[p], string(data[p+1:])))
	}

	return v[:]
}

var _v4frag_trans_keys = []byte{1, 0, 3, 18, 4, 18, 2, 2, 8, 10, 2, 2, 8, 19, 2, 2, 12, 13, 2, 2, 12, 20, 2, 2, 3, 13, 14, 14, 2, 2, 3, 19, 3, 18, 4, 18, 2, 2, 8, 19, 2, 2, 12, 19, 2, 2, 3, 19, 14, 14, 2, 2, 8, 19, 3, 9, 2, 2, 8, 19, 9, 9, 2, 2, 3, 19, 3, 9, 14, 14, 2, 2, 8, 12, 2, 6, 3, 19, 2, 9, 2, 2, 8, 15, 2, 9, 3, 19, 26, 26, 22, 22, 24, 24, 28, 28, 25, 25, 24, 24, 21, 21, 28, 28, 24, 24, 24, 24, 27, 27, 24, 24, 23, 23, 2, 2, 3, 13, 2, 9, 4, 19, 0, 0, 0}
var _v4frag_char_class = []int8{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1, 4, 5, 6, 1, 7, 8, 9, 1, 1, 10, 11, 12, 1, 13, 1, 14, 15, 16, 17, 18, 1, 19, 20, 1, 1, 1, 1, 1, 1, 1, 21, 22, 1, 23, 24, 1, 1, 1, 1, 1, 1, 25, 26, 27, 1, 1, 1, 28, 0}
var _v4frag_index_offsets = []int16{0, 0, 16, 31, 32, 35, 36, 48, 49, 51, 52, 61, 62, 73, 74, 75, 92, 108, 123, 124, 136, 137, 145, 146, 163, 164, 165, 177, 184, 185, 197, 198, 199, 216, 223, 224, 225, 230, 235, 252, 260, 261, 269, 277, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 319, 327, 343, 0}
var _v4frag_indices = []int8{3, 4, 2, 5, 2, 2, 4, 2, 6, 2, 7, 8, 9, 2, 10, 11, 13, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 2, 15, 16, 17, 19, 21, 2, 21, 23, 21, 2, 21, 21, 2, 2, 2, 2, 2, 2, 2, 21, 26, 21, 21, 29, 21, 2, 2, 2, 2, 2, 2, 21, 21, 32, 21, 2, 2, 2, 2, 2, 2, 21, 2, 21, 21, 14, 36, 21, 2, 2, 2, 2, 2, 2, 2, 2, 2, 21, 2, 2, 2, 21, 2, 21, 39, 2, 2, 2, 2, 2, 2, 2, 2, 2, 40, 2, 41, 2, 42, 43, 45, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 46, 2, 47, 49, 21, 2, 21, 2, 2, 2, 2, 2, 2, 2, 2, 21, 52, 21, 21, 2, 2, 2, 2, 2, 21, 55, 21, 2, 2, 2, 2, 2, 2, 21, 2, 21, 21, 2, 2, 2, 2, 2, 21, 58, 60, 21, 2, 21, 2, 21, 2, 2, 2, 2, 2, 2, 21, 63, 58, 2, 2, 2, 2, 63, 65, 21, 2, 21, 2, 21, 2, 2, 21, 2, 2, 2, 21, 68, 70, 21, 2, 2, 2, 2, 2, 2, 2, 2, 21, 21, 2, 2, 2, 2, 2, 21, 58, 58, 2, 2, 2, 2, 58, 74, 76, 21, 2, 21, 2, 21, 79, 2, 2, 2, 14, 21, 2, 2, 2, 2, 2, 21, 2, 2, 2, 2, 2, 2, 2, 21, 2, 21, 52, 82, 74, 2, 2, 2, 2, 82, 84, 21, 2, 21, 2, 21, 2, 2, 21, 87, 2, 2, 2, 2, 2, 2, 88, 90, 91, 2, 2, 92, 2, 2, 2, 2, 2, 2, 93, 2, 2, 2, 2, 21, 95, 97, 99, 101, 103, 105, 99, 108, 110, 112, 101, 115, 101, 118, 21, 2, 2, 2, 2, 2, 2, 2, 2, 21, 21, 121, 74, 74, 2, 2, 2, 2, 74, 21, 21, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 21, 123, 0}
var _v4frag_index_defaults = []int8{0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0}
var _v4frag_cond_targs = []int8{0, 1, 0, 2, 13, 14, 16, 34, 37, 39, 42, 59, 2, 3, 5, 7, 9, 11, 3, 4, 4, 61, 5, 6, 6, 7, 8, 8, 9, 10, 10, 11, 12, 12, 13, 14, 15, 15, 16, 17, 24, 27, 30, 33, 17, 18, 20, 22, 18, 19, 19, 20, 21, 21, 22, 23, 23, 24, 25, 25, 26, 26, 27, 28, 28, 29, 29, 30, 31, 31, 32, 32, 33, 34, 35, 35, 36, 36, 37, 38, 38, 39, 40, 40, 41, 41, 42, 43, 57, 43, 44, 48, 51, 55, 44, 45, 45, 46, 46, 47, 47, 61, 48, 49, 49, 50, 50, 51, 52, 52, 53, 53, 54, 54, 55, 56, 56, 57, 58, 58, 59, 60, 60, 1, 0}
var _v4frag_cond_actions = []int8{0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 1, 3, 1, 4, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 0, 1, 3, 1, 1, 0, 1, 3, 1, 1, 0, 1, 3, 1, 1, 1, 0, 1, 3, 1, 1, 3, 1, 1, 0, 1, 3, 1, 1, 3, 0, 1, 4, 4, 4, 4, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 3, 1, 0, 0}
var _v4frag_eof_trans = []int8{1, 2, 13, 19, 21, 23, 25, 26, 28, 29, 31, 32, 34, 35, 36, 38, 39, 45, 49, 51, 52, 54, 55, 57, 58, 60, 62, 63, 65, 67, 68, 70, 72, 73, 74, 76, 78, 79, 81, 82, 84, 86, 87, 90, 95, 97, 99, 101, 103, 105, 107, 108, 110, 112, 114, 115, 117, 118, 120, 121, 123, 102, 0}
var v4frag_start int = 1
var _ = v4frag_start
var v4frag_first_final int = 61
var _ = v4frag_first_final
var v4frag_error int = 0
var _ = v4frag_error
var v4frag_en_main int = 1
var _ = v4frag_en_main
